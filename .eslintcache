[{"C:\\Projetos\\linkedin\\linkedin-clone\\src\\index.js":"1","C:\\Projetos\\linkedin\\linkedin-clone\\src\\App.js":"2","C:\\Projetos\\linkedin\\linkedin-clone\\src\\serviceWorker.js":"3","C:\\Projetos\\linkedin\\linkedin-clone\\src\\app\\store.js":"4","C:\\Projetos\\linkedin\\linkedin-clone\\src\\Header.js":"5","C:\\Projetos\\linkedin\\linkedin-clone\\src\\HeaderOption.js":"6","C:\\Projetos\\linkedin\\linkedin-clone\\src\\SideBar.js":"7","C:\\Projetos\\linkedin\\linkedin-clone\\src\\Feed.js":"8","C:\\Projetos\\linkedin\\linkedin-clone\\src\\InputOption.js":"9","C:\\Projetos\\linkedin\\linkedin-clone\\src\\Post.js":"10","C:\\Projetos\\linkedin\\linkedin-clone\\src\\firebase.js":"11","C:\\Projetos\\linkedin\\linkedin-clone\\src\\Login.js":"12","C:\\Projetos\\linkedin\\linkedin-clone\\src\\features\\counter\\userSlice.js":"13","C:\\Projetos\\linkedin\\linkedin-clone\\src\\Register.js":"14"},{"size":438,"mtime":1609632385633,"results":"15","hashOfConfig":"16"},{"size":697,"mtime":1609716683455,"results":"17","hashOfConfig":"16"},{"size":5141,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":194,"mtime":1609630158462,"results":"19","hashOfConfig":"16"},{"size":1306,"mtime":1609616019360,"results":"20","hashOfConfig":"16"},{"size":439,"mtime":1609204465483,"results":"21","hashOfConfig":"16"},{"size":1409,"mtime":1609616005173,"results":"22","hashOfConfig":"16"},{"size":2589,"mtime":1609622483070,"results":"23","hashOfConfig":"16"},{"size":264,"mtime":1609612580996,"results":"24","hashOfConfig":"16"},{"size":1385,"mtime":1609632377608,"results":"25","hashOfConfig":"16"},{"size":489,"mtime":1609633202571,"results":"26","hashOfConfig":"16"},{"size":1989,"mtime":1609716704998,"results":"27","hashOfConfig":"16"},{"size":457,"mtime":1609632343102,"results":"28","hashOfConfig":"16"},{"size":4216,"mtime":1609719555459,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1mb6iko",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projetos\\linkedin\\linkedin-clone\\src\\index.js",[],["62","63"],"C:\\Projetos\\linkedin\\linkedin-clone\\src\\App.js",["64"],"C:\\Projetos\\linkedin\\linkedin-clone\\src\\serviceWorker.js",[],"C:\\Projetos\\linkedin\\linkedin-clone\\src\\app\\store.js",[],"C:\\Projetos\\linkedin\\linkedin-clone\\src\\Header.js",[],"C:\\Projetos\\linkedin\\linkedin-clone\\src\\HeaderOption.js",[],"C:\\Projetos\\linkedin\\linkedin-clone\\src\\SideBar.js",[],"C:\\Projetos\\linkedin\\linkedin-clone\\src\\Feed.js",["65"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Feed.css\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport InputOption from \"./InputOption\";\r\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\r\nimport Post from \"./Post\";\r\nimport { db } from \"./firebase\";\r\nimport firebase from 'firebase';\r\n\r\nfunction Feed() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    db.collection(\"posts\").orderBy(\"timestamp\", \"desc\").onSnapshot((snapshot) =>\r\n      setPosts(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      )\r\n    );\r\n\r\n    console.log(posts);\r\n  }, []);\r\n\r\n  const sendPost = (e) => {\r\n    e.preventDefault();\r\n\r\n    db.collection(\"posts\").add({\r\n      name: 'João Vitor',\r\n      description: 'Isso é um teste, meu amigo :)',\r\n      message: input,\r\n      photoUrl: '',\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    })\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    setInput(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"feed\">\r\n      <div className=\"feed__inputContainer\">\r\n        <div className=\"feed__input\">\r\n          <CreateIcon />\r\n          <form>\r\n            <input value={input} onChange={handleInputChange} type=\"text\" />\r\n            <button onClick={sendPost} type=\"submit\">\r\n              Send\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"feed__inputOptions\">\r\n          <InputOption Icon={ImageIcon} title={\"Photo\"} color=\"#70B5F9\" />\r\n          <InputOption\r\n            Icon={SubscriptionsIcon}\r\n            title={\"Video\"}\r\n            color=\"#E7A33E\"\r\n          />\r\n          <InputOption Icon={EventNoteIcon} title={\"Event\"} color=\"#C0CBCD\" />\r\n          <InputOption\r\n            Icon={CalendarViewDayIcon}\r\n            title={\"Write article\"}\r\n            color=\"#7FC15E\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {posts.length > 0 &&\r\n        posts.map(({id, data: { name, description, message, photoUrl}}) => {\r\n          return (\r\n            <Post\r\n              key={id}\r\n              name={name}\r\n              description={description}\r\n              message={message}\r\n              photoUrl={photoUrl}\r\n            />\r\n          );\r\n        })}\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","C:\\Projetos\\linkedin\\linkedin-clone\\src\\InputOption.js",[],"C:\\Projetos\\linkedin\\linkedin-clone\\src\\Post.js",["66","67"],"import { Avatar } from '@material-ui/core';\r\nimport React from 'react'\r\nimport \"./Post.css\";\r\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\r\nimport InputOption from \"./InputOption\";\r\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\r\nimport CommentOutlinedIcon from '@material-ui/icons/CommentOutlined';\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\r\nimport moment from 'moment'; \r\nfunction Post({name, description, message, photoUrl, timestamp}) {\r\n\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post__header\">\r\n        <Avatar />\r\n        <div className=\"post__info\">\r\n          <h2>{name}</h2>\r\n          <p>{description}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"post__body\">\r\n        <p>{message}</p>\r\n      </div>\r\n\r\n      <hr />\r\n      <div className=\"post__actions\">\r\n      <InputOption\r\n            Icon={ThumbUpAltOutlinedIcon}\r\n            title={\"Like\"}\r\n            color=\"rgba(0, 0, 0, 60%)\"\r\n          />\r\n            <InputOption\r\n            Icon={CommentOutlinedIcon}\r\n            title={\"Comment\"}\r\n            color=\"rgba(0, 0, 0, 60%)\"\r\n          />\r\n            <InputOption\r\n            Icon={ShareOutlinedIcon}\r\n            title={\"Share\"}\r\n            color=\"rgba(0, 0, 0, 60%)\"\r\n          />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Post\r\n","C:\\Projetos\\linkedin\\linkedin-clone\\src\\firebase.js",["68"],"import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyABFS-6Av2HfnxSCL8-G-TGp6VBWGhexBI\",\r\n  authDomain: \"linkedin-b96c3.firebaseapp.com\",\r\n  projectId: \"linkedin-b96c3\",\r\n  storageBucket: \"linkedin-b96c3.appspot.com\",\r\n  messagingSenderId: \"472452383999\",\r\n  appId: \"1:472452383999:web:0d07ab950b5d1797e9f8ca\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport {db, auth};","C:\\Projetos\\linkedin\\linkedin-clone\\src\\Login.js",["69"],"C:\\Projetos\\linkedin\\linkedin-clone\\src\\features\\counter\\userSlice.js",[],"C:\\Projetos\\linkedin\\linkedin-clone\\src\\Register.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":8,"column":8,"nodeType":"76","messageId":"77","endLine":8,"endColumn":13},{"ruleId":"78","severity":1,"message":"79","line":28,"column":6,"nodeType":"80","endLine":28,"endColumn":8,"suggestions":"81"},{"ruleId":"74","severity":1,"message":"82","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":27},{"ruleId":"74","severity":1,"message":"83","line":9,"column":8,"nodeType":"76","messageId":"77","endLine":9,"endColumn":14},{"ruleId":"74","severity":1,"message":"84","line":12,"column":7,"nodeType":"76","messageId":"77","endLine":12,"endColumn":18},{"ruleId":"85","severity":1,"message":"86","line":69,"column":34,"nodeType":"87","endLine":69,"endColumn":46},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'posts'. Either include it or remove the dependency array.","ArrayExpression",["90"],"'CalendarViewDayIcon' is defined but never used.","'moment' is defined but never used.","'firebaseApp' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [posts]",{"range":"93","text":"94"},[896,898],"[posts]"]